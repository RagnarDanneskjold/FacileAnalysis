% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdge.R
\name{model_def}
\alias{model_def}
\alias{model_def.data.frame}
\alias{model_def.tbl}
\alias{model_def.FacileDataStore}
\alias{model_def.facile_frame}
\title{Builds (simple) design and contrast matrices for use with \code{\link[=dge]{dge()}}}
\usage{
model_def(x, covariate, numer = NULL, denom = NULL, fixed = NULL,
  on_missing = c("warning", "error"), ...)

\method{model_def}{data.frame}(x, covariate, numer = NULL,
  denom = NULL, fixed = NULL, on_missing = c("warning", "error"),
  ...)

\method{model_def}{tbl}(x, covariate, numer = NULL, denom = NULL,
  fixed = NULL, on_missing = c("warning", "error"), ...)

\method{model_def}{FacileDataStore}(x, covariate, numer = NULL,
  denom = NULL, fixed = NULL, on_missing = c("warning", "error"),
  ..., samples = active_samples(x), custom_key = NULL)

\method{model_def}{facile_frame}(x, covariate, numer = NULL,
  denom = NULL, fixed = NULL, ..., custom_key = NULL)
}
\arguments{
\item{x}{a dataset}

\item{covariate}{the name of the sample_covariate we are performing a
contrast against}

\item{on_missing}{when a covariate level is missing (NA) for a sample, the
setting of this parameter (default \code{"warn"}) will dictate the behavior
of this funciton. When \code{"warning"}, a warning will be raised, and the
message will be stored in the \code{$warning} element of the resul. Otherwise,
when \code{"error"}. See the "Missing Covariates" section for more information.}
}
\value{
a list with:
\itemize{
\item \code{$test}: "ttest" or "anova"
\item \code{$covariates}: the pData over the samples (datset,sample_id, ...)
\item \code{$design}: the design matrix (always 0-intercept)
\item \code{$contrast}: the contrast vector that defines the comparison asked for
\item \code{$messages}: A character vector of messages generated
\item \code{$warnings}: A character vector of warnings generated
}
}
\description{
This simplifies the design and contrast building process by allowing for
simple model definitions that are, essentially, functions of a single
covariate. More elaborate models can be analysed, but the user is left to
define the design, coef / contrast to test manually and pass those into
\code{\link[=dge]{dge()}}.
}
\details{
Note: actually a (likely) small modification of this can have it support the
"ratio of ratios" model setup.
}
\section{Missing Covariates}{

Given the "ragged" nature of sample annotations in a FacileDataStore, some
samples may have NA's as their values for the covariates under test. In this
case. In this case, if \code{on_missing} is set to "error", an error will be
thrown, otherwise a message will be set in the \code{warning} list element.

The samples that the differential expression should be run on will be
enumerated by the \code{(dataset,sample_id)} pair in the \code{result$covariates}
tibble.
}

\section{data.frame}{

The data.frame function definition assumes that \code{x} is a data.frame of
samples (dataset,sample_id) and the covariates defined on these samples
that contains a superset of the covariates used in the design and contrast
construction.
}

\examples{

fds <- FacileData::exampleFacileDataSet()

# Look for tumor vs normal differences, controling for stage and sex
model_info <- fds \%>\%
  filter_samples(indication == "BLCA") \%>\%
  model_def(covariate = "sample_type", numer = "tumor", denom = "normal",
            fixed = c("sex"))
}
