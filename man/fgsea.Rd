% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgsea.R
\name{fgsea}
\alias{fgsea}
\alias{fgsea.FacileTtestAnalysisResult}
\alias{result.FacileGseaResult}
\title{Performs Gene Set Enrichment Analyses}
\usage{
fgsea(x, gdb, methods, ...)

\method{fgsea}{FacileTtestAnalysisResult}(x, gdb, methods = "cameraPR",
  min_logFC = 1, max_padj = 0.1, rank_by = "logFC", signed = TRUE,
  ...)

\method{result}{FacileGseaResult}(x, name = "result", ...)
}
\arguments{
\item{x}{A \code{FacileAnalysisResult} object}

\item{gdb}{A \code{multiGSEA::GeneSetDb} object}

\item{methods}{the GSEA methods to use on \code{x}.}
}
\value{
A FacileGSEAResult object, which includes a MultiGSEAResult object
as it's \code{result()}.
}
\description{
\strong{For now} only GSEA methods process a pre-ranked feature set work, like
\code{"cameraPR"} or \code{"fgsea"}.
}
\section{Updates required to multiGSEA}{

I need to update multiGSEA to take an input data.frame of differential
expression statistics to work with goseq as well such that it doesn't have to
run the differential expression stuff again.

Once this is implemented, the a call to fgsea will also work on an Anova
result, as well.
}

\section{Accessing Results}{

A call to \code{result(fgea.res)} will return the \code{multiGSEA::MultiGSEAResult}
object. If the user specifies the name of a GSEA method used in the analysis,
then the summarized results from that method will be returned by passing
through to the \code{multiGSEA::result}function, ie. \code{r1} and \code{r2} in the code
below are equivalent:\preformatted{r1 <- result(fgsea.res, name = "cameraPR")
r2 <- result(fgsea.res) \%>\% multiGSEA::result("cameraPR")
}
}

\examples{
gdb <- multiGSEA::getMSigGeneSetDb("h", "human", id.type = "entrez")

# GSEA from t-test result ---------------------------------------------------
ttest.res <- FacileData::exampleFacileDataSet() \%>\%
  FacileData::filter_samples(indication == "CRC") \%>\%
  fdge_model_def(covariate = "sample_type",
                 numer = "tumor", denom = "normal", fixed = "sex") \%>\%
  fdge(method = "voom")
ttest.gsea <- fgsea(ttest.res, gdb)

# GSEA from ANOVA result ----------------------------------------------------
# Not yet implemented, requires small update to multiGSEA

# GSEA over loadings on a Principal Component -------------------------------
# Not yet implemented, need to get a signed weight out of eigenWeightedMean
# right now we just have weights. Or, fully extracing the biplot code, I
# think the weight should be the length on the PC of choice, and the sign is
# the same.
}
